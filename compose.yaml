services:
  server:
    build:
      context: .
    ports:
      - 8080:8080
    environment:
      - DATABASE_URL=jdbc:postgresql://db:5432/user  # Update with your PostgreSQL database URL
      - DATABASE_USER=postgres  # Update with your PostgreSQL username
      - DATABASE_PASSWORD=postgres  # Update with your PostgreSQL password
    # depends_on:
      # - db
      # - db-slave1
      # - db-slave2
    # networks:
      # - pgnet

  # pgadmin:
    # image: dpage/pgadmin4
    # container_name: pgadmin4_container
    # restart: always
    # ports:
      # - "8888:80"
    # environment:
      # PGADMIN_DEFAULT_EMAIL: postgres@postgres.com
      # PGADMIN_DEFAULT_PASSWORD: postgres
    # volumes:
      # - pgadmin-data:/var/lib/pgadmin

  # db:
    # image: postgres
    # restart: always
    # environment:
      # - POSTGRES_DB=user
      # - POSTGRES_USER=postgres
      # - POSTGRES_PASSWORD=postgres
    # expose:
      # - 5432
    # ports:
      # - 5438:5432
    # volumes:
      # - db-data:/var/lib/postgresql/data
    # networks:
      # - pgnet

  # db-slave1:
    # image: postgres
    # restart: always
    # environment:
      # - POSTGRES_DB=user
      # - POSTGRES_USER=postgres
      # - POSTGRES_PASSWORD=postgres
    # expose:
      # - 5432
    # ports:
      # - 5439:5432
    # volumes:
      # - db-data-slave1:/var/lib/postgresql/data
    # networks:
      # - pgnet
    # entrypoint: ["sh", "-c", "until pg_basebackup -h db -p 5432 -D /var/lib/postgresql/data -U replicator -v -P --wal-method=stream; do sleep 1; done && touch /var/lib/postgresql/data/standby.signal && exec postgres"]

  # db-slave2:
    # image: postgres
    # restart: always
    # environment:
      # - POSTGRES_DB=user
      # - POSTGRES_USER=postgres
      # - POSTGRES_PASSWORD=postgres
    # expose:
      # - 5432
    # ports:
      # - 5440:5432
    # volumes:
      # - db-data-slave2:/var/lib/postgresql/data
    # networks:
      # - pgnet
    # entrypoint: ["sh", "-c", "until pg_basebackup -h db -p 5432 -D /var/lib/postgresql/data -U replicator -v -P --wal-method=stream; do sleep 1; done && touch /var/lib/postgresql/data/standby.signal && exec postgres"]

  # prometheus:
    # image: prom/prometheus
    # ports:
      # - "9090:9090"
    # volumes:
      # - prometheus-data:/prometheus
      # - ./prometheus.yml:/etc/prometheus/prometheus.yml

  # grafana:
    # image: grafana/grafana
    # ports:
      # - "3000:3000"
    # environment:
      # - GF_SECURITY_ADMIN_PASSWORD=admin  # Update with your desired Grafana admin password
    # volumes:
      # - grafana-data:/var/lib/grafana

# networks:
  # pgnet:
    # driver: bridge

# volumes:
  # db-data:
    # driver: local
    # driver_opts:
      # type: none
      # o: bind
      # device: C:/Volumes/db-data
  # db-data-slave1:
    # driver: local
    # driver_opts:
      # type: none
      # o: bind
      # device: C:/Volumes/db-data-slave1
  # db-data-slave2:
    # driver: local
    # driver_opts:
      # type: none
      # o: bind
      # device: C:/Volumes/db-data-slave2
  # pgadmin-data:
    # driver: local
    # driver_opts:
      # type: none
      # o: bind
      # device: C:/Volumes/pgadmin-data
  # prometheus-data:
    # driver: local
    # driver_opts:
      # type: none
      # o: bind
      # device: C:/Volumes/prometheus-data
  # grafana-data:
    # driver: local
    # driver_opts:
      # type: none
      # o: bind
      # device: C:/Volumes/grafana-data
