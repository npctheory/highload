version: '3.9'

services:
  ansible:
    build:
      context: ./ansible
      dockerfile: Dockerfile
    container_name: ansible
    restart: unless-stopped
    networks:
      - pg_net
    volumes:
      - ./ansible/playbooks/:/ansible/playbooks
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket for Ansible

  pg_master:
    build:
      context: ./db
      dockerfile: Dockerfile
    image: db:local
    container_name: pg_master
    restart: unless-stopped
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "35432:5432"
    networks:
      - pg_net
    volumes:
      - pg_master:/var/lib/postgresql/data

  pg_slave:
    image: db:local
    depends_on:
      - pg_master
    container_name: pg_slave
    restart: unless-stopped
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "35434:5432"
    networks:
      - pg_net
    volumes:
      - pg_slave:/var/lib/postgresql/data

  pg_asyncslave:
    image: db:local
    depends_on:
      - pg_master
    container_name: pg_asyncslave
    restart: unless-stopped
    environment:
      POSTGRES_DB: user
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "35436:5432"
    networks:
      - pg_net
    volumes:
      - pg_asyncslave:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - pg_net

  pg_master_exporter:
    image: wrouesnel/postgres_exporter
    container_name: pg_master_exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@pg_master:5432/user?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - pg_net

  pg_slave_exporter:
    image: wrouesnel/postgres_exporter
    container_name: pg_slave_exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@pg_slave:5432/user?sslmode=disable"
    ports:
      - "9188:9187" # Exposing it on a different host port
    networks:
      - pg_net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - pg_net
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - pg_net
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards

volumes:
  pg_master:
  pg_slave:
  pg_asyncslave:
  pgadmin_data:
  prometheus_data:
  grafana_data:

networks:
  pg_net:
    external: true
